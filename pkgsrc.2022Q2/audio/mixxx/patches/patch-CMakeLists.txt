$NetBSD: patch-CMakeLists.txt,v 1.1 2021/11/23 10:45:44 nia Exp $

- Make PortMidi optional.
- CMake is not able to properly detect the version of hidapi.

--- CMakeLists.txt.orig	2021-09-29 13:23:02.000000000 +0000
+++ CMakeLists.txt
@@ -460,8 +460,6 @@ add_library(mixxx-lib STATIC EXCLUDE_FRO
   src/controllers/midi/midimessage.cpp
   src/controllers/midi/midioutputhandler.cpp
   src/controllers/midi/midiutils.cpp
-  src/controllers/midi/portmidicontroller.cpp
-  src/controllers/midi/portmidienumerator.cpp
   src/controllers/softtakeover.cpp
   src/database/mixxxdb.cpp
   src/database/schemamanager.cpp
@@ -1534,8 +1532,6 @@ add_executable(mixxx-test
   src/test/performancetimer_test.cpp
   src/test/playcountertest.cpp
   src/test/playlisttest.cpp
-  src/test/portmidicontroller_test.cpp
-  src/test/portmidienumeratortest.cpp
   src/test/queryutiltest.cpp
   src/test/rangelist_test.cpp
   src/test/readaheadmanager_test.cpp
@@ -1931,9 +1927,19 @@ target_include_directories(mixxx-lib SYS
 target_link_libraries(mixxx-lib PRIVATE PortAudioRingBuffer)
 
 # PortMidi
-find_package(PortMidi REQUIRED)
-target_include_directories(mixxx-lib SYSTEM PUBLIC ${PortMidi_INCLUDE_DIRS})
-target_link_libraries(mixxx-lib PRIVATE ${PortMidi_LIBRARIES})
+find_package(PortMidi)
+cmake_dependent_option(PORTMIDI "PortMidi MIDI device support" ON "${PortMidi_FOUND}" OFF)
+if(PORTMIDI)
+  target_include_directories(mixxx-lib SYSTEM PUBLIC ${PortMidi_INCLUDE_DIRS})
+  target_compile_definitions(mixxx-lib PUBLIC __PORTMIDI__)
+  target_link_libraries(mixxx-lib PRIVATE ${PortMidi_LIBRARIES})
+  target_sources(mixxx-lib PRIVATE
+    src/controllers/midi/portmidicontroller.cpp
+    src/controllers/midi/portmidienumerator.cpp
+    src/test/portmidicontroller_test.cpp
+    src/test/portmidienumeratortest.cpp
+  )
+endif()
 
 # Protobuf
 if(STATIC_DEPS)
@@ -2601,7 +2607,7 @@ find_package(LibUSB)
 # USB HID controller support
 option(HID "USB HID controller support" ON)
 if(HID)
-  find_package(hidapi 0.10.1)
+  find_package(hidapi)
   if(NOT hidapi_FOUND)
     message(STATUS "Linking internal libhidapi statically")
     add_library(mixxx-hidapi STATIC EXCLUDE_FROM_ALL)
