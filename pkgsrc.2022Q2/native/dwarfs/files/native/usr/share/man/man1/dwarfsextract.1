.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "DWARFSEXTRACT" "1" "June 2022" ""
.SH "NAME"
\fBdwarfsextract\fR \- extract DwarFS image
.SH "SYNOPSIS"
\fBdwarfsextract\fR \fB\-i\fR \fIimage\fR [\fB\-o\fR \fIdir\fR] [\fIoptions\fR\|\.\|\.\|\.]
.br
\fBdwarfsextract\fR \fB\-i\fR \fIimage\fR \-f \fIformat\fR [\fB\-o\fR \fIfile\fR] [\fIoptions\fR\|\.\|\.\|\.]
.SH "DESCRIPTION"
\fBdwarfsextract\fR allows you to extract a DwarFS image, either directly into another archive file, or to a directory on disk\.
.P
To extract the filesystem image to a directory, you can use:
.IP "" 4
.nf
dwarfsextract \-i image\.dwarfs \-o output\-directory
.fi
.IP "" 0
.P
The output directory must exist\.
.P
You can also rewrite the contents of the filesystem image as another archive type, for example, to write a tar archive, you can use:
.IP "" 4
.nf
dwarfsextract \-i image\.dwarfs \-o output\.tar \-f ustar
.fi
.IP "" 0
.P
For a list of supported formats, see libarchive\-formats(5)\.
.P
If you want to compress the output archive, you can use a pipeline:
.IP "" 4
.nf
dwarfsextract \-i image\.dwarfs \-f ustar | gzip > output\.tar\.gz
.fi
.IP "" 0
.P
You could also use this as an alternative way to extract the files to disk:
.IP "" 4
.nf
dwarfsextract \-i image\.dwarfs \-f cpio | cpio \-id
.fi
.IP "" 0
.SH "OPTIONS"
.TP
\fB\-i\fR, \fB\-\-input=\fR\fIfile\fR
Path to the source filesystem\.
.TP
\fB\-o\fR, \fB\-\-output=\fR\fIdirectory\fR|\fIfile\fR
If no format is specified, this is the directory to which the contents of the filesystem should be extracted\. If a format is specified, this is the name of the output archive\. This option can be omitted, in which case the default is to extract the files to the current directory, or to write the archive data to stdout\.
.TP
\fB\-O\fR, \fB\-\-image\-offset=\fR\fIvalue\fR|\fBauto\fR
Specify the byte offset at which the filesystem is located in the image\. Use \fBauto\fR to detect the offset automatically\. This is also the default\. This is only useful for images that have some header located before the actual filesystem data\.
.TP
\fB\-f\fR, \fB\-\-format=\fR\fIformat\fR
The archive format to produce\. If this is left empty or unspecified, files will be extracted to the output directory (or the current directory if no output directory is specified)\. For a full list of supported formats, see libarchive\-formats(5)\.
.TP
\fB\-n\fR, \fB\-\-num\-workers=\fR\fIvalue\fR
Number of worker threads used for extracting the filesystem\.
.TP
\fB\-s\fR, \fB\-\-cache\-size=\fR\fIvalue\fR
Size of the block cache, in bytes\. You can append suffixes (\fBk\fR, \fBm\fR, \fBg\fR) to specify the size in KiB, MiB and GiB, respectively\. Note that this is not the upper memory limit of the process, as there may be blocks in flight that are not stored in the cache\. Also, each block that hasn't been fully decompressed yet will carry decompressor state along with it, which can use a significant amount of additional memory\.
.TP
\fB\-\-log\-level=\fR\fIname\fR
Specifiy a logging level\.
.TP
\fB\-\-help\fR
Show program help, including option defaults\.
.SH "AUTHOR"
Written by Marcus Holland\-Moritz\.
.SH "COPYRIGHT"
Copyright (C) Marcus Holland\-Moritz\.
.SH "SEE ALSO"
mkdwarfs(1), dwarfs(1), dwarfsck(1), dwarfs\-format(5), libarchive\-formats(5)
