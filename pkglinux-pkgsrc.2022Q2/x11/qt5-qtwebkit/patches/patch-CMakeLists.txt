$NetBSD: patch-CMakeLists.txt,v 1.2 2021/06/24 14:38:09 nia Exp $

Recognize "powerpc" as a valid variant of "ppc" so configure
works on NetBSD/macppc, and "earm*" so it works on NetBSD/arm.

Maybe this should be normalized in CMake...

--- CMakeLists.txt.orig	2020-03-04 17:16:37.000000000 +0000
+++ CMakeLists.txt
@@ -57,7 +57,7 @@ if (MSVC_CXX_ARCHITECTURE_ID)
 else ()
     string(TOLOWER ${CMAKE_SYSTEM_PROCESSOR} LOWERCASE_CMAKE_SYSTEM_PROCESSOR)
 endif ()
-if (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^arm")
+if (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^(arm|earm)")
     set(WTF_CPU_ARM 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "^aarch64")
     set(WTF_CPU_ARM64 1)
@@ -71,11 +71,11 @@ elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR
     set(WTF_CPU_X86_64 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(i[3-6]86|x86)")
     set(WTF_CPU_X86 1)
-elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc")
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(ppc|powerpc)")
     set(WTF_CPU_PPC 1)
-elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64")
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(ppc|powerpc)64")
     set(WTF_CPU_PPC64 1)
-elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "ppc64le")
+elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "(ppc|powerpc)64le")
     set(WTF_CPU_PPC64LE 1)
 elseif (LOWERCASE_CMAKE_SYSTEM_PROCESSOR MATCHES "parisc*")
     set(WTF_CPU_HPPA 1)
