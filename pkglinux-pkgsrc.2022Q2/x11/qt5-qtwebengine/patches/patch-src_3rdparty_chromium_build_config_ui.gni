$NetBSD: patch-src_3rdparty_chromium_build_config_ui.gni,v 1.2 2022/04/18 11:18:18 adam Exp $

--- src/3rdparty/chromium/build/config/ui.gni.orig	2021-02-19 16:41:59.000000000 +0000
+++ src/3rdparty/chromium/build/config/ui.gni
@@ -31,16 +31,16 @@ declare_args() {
   # Enabled by default. Can be disabled if Ozone only build is required and
   # vice-versa.
   use_x11 =
-      is_linux && !is_chromecast && !is_chromeos && !chromeos_is_browser_only
+      (is_linux || is_bsd) && !is_chromecast && !is_chromeos && !chromeos_is_browser_only
 
   # Indicates if Aura is enabled. Aura is a low-level windowing library, sort
   # of a replacement for GDI or GTK.
-  use_aura = is_win || is_linux || is_chromeos || is_fuchsia
+  use_aura = is_win || is_linux || is_chromeos || is_fuchsia || is_bsd
 }
 
 declare_args() {
   # True means the UI is built using the "views" framework.
-  toolkit_views = is_mac || is_win || is_linux || is_chromeos || is_fuchsia
+  toolkit_views = is_mac || is_win || is_linux || is_chromeos || is_fuchsia || is_bsd
 
   # Whether we should use glib, a low level C utility library.
   use_glib = is_desktop_linux && !is_chromecast
@@ -49,7 +49,7 @@ declare_args() {
 }
 
 # Make sure glib is not used if building for ChromeOS/Chromecast
-assert(!use_glib || (is_linux && !is_chromeos && !is_chromecast))
+assert(!use_glib || ((is_linux || is_bsd) && !is_chromeos && !is_chromecast))
 
 # Whether to use atk, the Accessibility ToolKit library
 use_atk = is_desktop_linux && !is_chromecast && use_glib && !use_qt
